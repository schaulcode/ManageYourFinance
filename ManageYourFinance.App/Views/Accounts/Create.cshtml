@model ManageYourFinance.App.Models.Accounts

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Accounts</h4>
        @{ if (ViewBag.Message != null)
            {
                <div class="alert alert-warning">@ViewBag.Message</div>
            }}
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Type",(IEnumerable<SelectListItem>)ViewBag.AccountType,"Select a Type",  htmlAttributes : new { @class = "form-control" } )   
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "col-form-label col-md-2 form-check-label" })
            <div class="col-md-10">
                <div class="form-check">
                    @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-check-input" } } )
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.IncludeTotal, htmlAttributes: new { @class = "col-form-label col-md-2 form-check-label" })
            <div class="col-md-10">
                <div class="form-check">
                    @Html.EditorFor(model => model.IncludeTotal,new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.IncludeTotal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-secondary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { },  new {  @class = "btn btn-primary" } )
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model ManageYourFinance.App.Models.Transactions

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Transactions</h4>
    @{ if (ViewBag.Message != null)
        {
            <div class="alert alert-warning">@ViewBag.Message</div>
        }}
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group row">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Accounts, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Accounts", (IEnumerable<SelectListItem>)ViewBag.Accounts, htmlAttributes : new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.Accounts, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewBag.Category, htmlAttributes : new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Payee, htmlAttributes: new { @class = "col-form-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Payee", (IEnumerable<SelectListItem>)ViewBag.Payee, htmlAttributes : new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.Payee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="offset-md-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-secondary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
